version: "3.8"

services:
  db:
    image: postgres:13
    env_file:
      - .env  # Secure credentials
    networks:
      - sonar-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube
    ports:
      - "9000:9000"
    env_file:
      - .env
    networks:
      - sonar-network
    depends_on:
      - db
    security_opt:
      - no-new-privileges:true
    read_only: true

  pylint-flake8:
    image: python:3.11-slim
    volumes:
      - ./backend:/usr/src
      - ./reports:/reports
    command: >
      sh -c "
      apt-get update && apt-get install -y python3 python3-pip &&
      pip3 install --no-cache-dir pylint flake8 &&
      mkdir -p /reports &&
      pylint --output-format=json /usr/src/**/*.py > /reports/pylint-report.json || true &&
      flake8 --format=json /usr/src > /reports/flake8-report.json || true
      "
    security_opt:
      - no-new-privileges:true
    read_only: true

  sonar-scanner:
    image: sonarsource/sonar-scanner-cli
    depends_on:
      - sonarqube
    env_file:
      - .env
    volumes:
      - ./backend:/usr/src
      - ./reports:/reports
    command: >
      sonar-scanner
      -Dsonar.projectKey=DarkMaze
      -Dsonar.sources=/usr/src
      -Dsonar.inclusions=**
      -Dsonar.host.url=http://sonarqube:9000
      -Dsonar.login=${SONAR_TOKEN}
      -Dsonar.language=py
      -Dsonar.python.version=3
      -Dsonar.python.pylint.reportPaths=/reports/pylint-report.json
      -Dsonar.python.flake8.reportPaths=/reports/flake8-report.json
      -Dsonar.qualitygate.wait=true
    networks:
      - sonar-network
    security_opt:
      - no-new-privileges:true
    read_only: true

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
    ports:
      - "8088:8088"
    command: uvicorn src.main:app --host "0.0.0.0" --port 8088 --workers 2
    depends_on:
      - backend
    security_opt:
      - no-new-privileges:true
    read_only: true
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    command: uvicorn src.main:app --host "0.0.0.0" --port 8000 --workers 2
    security_opt:
      - no-new-privileges:true
    read_only: true
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

networks:
  sonar-network:
